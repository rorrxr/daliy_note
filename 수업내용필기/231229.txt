

자바스크립트
	- 웹 브라우저에서 해석되고 실행
	- Front-End 기능 : 클라이언트에서 동작하는 기능


Node.js : 자바스크립트를 웹 브라우저에 의존하지 않고
	독립적으로 실행하는 환경을 제공하는 런타임 기능의 프로그램

	- Back-End 기능 : 서버에서 동작하는 기능


Back-End 기능
	- 자바 기반의 스프링
	- ASP.net
	- PHP
	- Node.js (feat. javascript)
	- Python 장고
	- ... 

객체(Object)
	- 세상에 존재하는 물건, 물질 등을 가리키는 표현

	- 객체 종류
	예> 공기, 물, 불, 자동차, 계산기, 모니터, ... 등등

	- 객체 분석
		1) 기능(행위) - 프로그래밍 메서드
		2) 성격(상태) - 프로그래밍 속성

프로그래밍에서 객체는 2가지로 표현한다.
	- 속성과 메서드로 표현
	- 속성 : 변수라는 형태로 데이터를 저장
	- 메서드 : 동사, 예> 시작, 드라이브, 브레이크, 정지

변수는 let으로, 객체는 const로 선언
변수 -> let car = "Flat";
객체 -> const car = {type:"Flat", model:"500", color:"white"};

자바 스크립트
	- 객체 : 명령어가 속성과 메서드로 구분

	- 내장 객체 : 기본적으로 제공

	- 사용자 정의 객체

// tv 물건의 정보를 변수로 표현한 방식

let tvColor = "white";
let tvPrice = 300000;

document.write("tv 색상은 " + tvColor);
document.write("tv 가격은 " + tvPrice);

// tv라는 정보를 사용자 정의 객체를 생성하고, 사용하는 방식
let tv = new Object(); // 컨테이너 성격의 기억장소를 만들고, 그곳에 주소를 tv에 저장한다.

// tv 객체에 필요한 정보(상태)를 저장하기 위한 실질적인 기억장소를 설계 (속성: property)
tv.color = "white";
tv.price = 300000;

// tv 객체의 기능. (메서드 : method)
tv.info = function(){
document.write("tv 색상 : " + this.color, "<br>");
document.write("tv 가격 : " + this.price, "<br>");
}


정보
- 변수 방식
- 객체 구조를 만들고 사용

내장객체
- 확장 기능을 목적으로 기본적으로 제공하는 객체

자바스크립트 학습목적
 - 태그를 참조하여, 제어 및 조작하는 목적	
