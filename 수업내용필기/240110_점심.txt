점심 깃 공부
error: failed to push some refs to 'https://github.com/rorrxr/java_study.git'
https://www.google.com/search?q=error%3A+failed+to+push+some+refs+to+%27https%3A%2F%2Fgithub.com%2Frorrxr%2Fjava_study.git%27&oq=error%3A+failed+to+push+some+refs+to+%27https%3A%2F%2Fgithub.com%2Frorrxr%2Fjava_study.git%27&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQRRg60gEHMzU5ajBqN6gCALACAA&sourceid=chrome&ie=UTF-8

https://memme.tistory.com/48

https://algoroot.tistory.com/28

https://www.daleseo.com/git-add/

https://www.lainyzine.com/ko/article/how-to-link-github-remote-repository-and-local-git-repository/

ㅡㅡㅡㅡㅡ
충돌 실습 
https://thebook.io/080212/0374/

$git merge --abort

수동으로 충돌 해결 8.5.3

병합 커밋을 생성하면 깃의 충돌 마크는 자동으로 없어집니다. 
깃 배시에서 master|MERGING이 master로 돌아온 것을 확인합니다.

소스트리에서 충돌 해결
8-31 병합 커밋 생성
8-32 병합을 완료한 브랜치

8.6 브랜치 병합 여부 확인
$git branch --merged >> 브랜치 목록

$git branch --no--merged >> 병합하지 않은 브랜치
병합하지 않은 브랜치는 -d 옵션으로 삭제되지 않아서 강제 삭제하기 위하여 -D 옵션을 사용한다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
리베이스 

$git rebase 브랜치

1. description 브랜치로 체크아웃 한다.

$git checkout description

2. description 브랜치에서 원본 main 브랜치를 리베이스 한다.
$git rebase main


리베이스 명령이 실행되면 파생 브랜치의 커밋들은 기준 브랜치의 마지막 커밋으로 재정렬됩니다. 
소스트리에서 결과를 확인해 봅시다.

main 브랜치의 마지막 커밋 뒤에 파생 브랜치의 커밋이 연결된 것을 볼 수 있습니다. 
두 브랜치를 하나의 그래프 모양으로 합친 형태입니다.

ㅡㅡㅡㅡㅡ

소스트리에서 충돌 해결 

8-47 충돌한 파일 내용

infoh@DESKTOP MINGW64 /e/gitstudy08 (menu|REBASE 1/2) 충돌 표시

$ code index.htm VS Code 실행

리베이스는 커밋을 하나씩 따라가면서 위치를 재조정합니다. 
충돌을 수정한 후에는 rebase 명령어와 --continue 옵션을 사용합니다.

$ git rebase --continue

리베이스를 취소하고 싶다면 --abort 옵션을 사용합니다.

$ git rebase --abort
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
복귀 - 
다시시작

reset 명령어를 사용하면 지정된 커밋 코드로 되돌아갑니다. 
즉, 특정 커밋의 해시 값 상태로 모든 코드를 복구합니다.

$ git reset 옵션 커밋ID
예시 : $ git reset --hard HEAD^^^

soft: 스테이지 영역을 포함한 상태로 복원합니다.
mixed: 기본 옵션 값은 mixed입니다. 
reset 명령어를 사용할 때 옵션을 지정하지 않으면 기본값인 mixed로 선택됩니다.
hard: 실제 파일이 삭제된 이전 상태로 복원합니다.

~~
soft 옵션은 지정한 커밋 위치로 복귀합니다. 
복귀하면서 스테이지 영역의 상태도 같이 복귀합니다. 
soft 옵션은 파일을 수정하고, add 명령어로 스테이지 영역에 올려 커밋을 실행하기 직전의 단계로 되돌립니다. 
status 명령어를 실행한 출력 결과에서 메시지가 초록색으로 표기되는 것을 보면, 
add 명령어를 사용하지 않고도 바로 커밋할 수 있는 직전의 상황입니다.

이처럼 soft 옵션은 단순히 HEAD 위치를 이동하는 역할만 합니다. 
마치 직전의 커밋 단계로 체크아웃하라는 명령과 유사합니다. 
reset --soft 명령어와 체크아웃 명령어는 HEAD 위치를 이동한다는 점에서는 동일하지만, 
브랜치를 변경하지 않는다는 점에서 차이가 있습니다.







